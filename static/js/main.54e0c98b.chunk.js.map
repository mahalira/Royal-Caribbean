{"version":3,"sources":["components/Button.jsx","components/OptionFilter.jsx","components/Select.jsx","components/Tab.jsx","components/SelectDate.jsx","components/Calendar.jsx","CruiseSearchWidget.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","text","className","OptionFilter","label","labelSecond","selection","type","id","openTab","isActive","group","year","onClick","window","innerWidth","length","class","Select","setGroup","sendData","useState","active","setActive","Tab","SelectDate","setYear","months","Calendar","map","e","i","countries","ports","tabs","years","CruiseSearchWidget","optionSelected","setOptionSelected","openOptions","setOpenOptions","destinations","setDestinations","shipments","setShipments","dates","setDates","arrTemp","setArrTemp","useEffect","showOptions","getData","newArrTemp","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAQeA,EANA,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACb,OACI,wBAAQC,UAAU,iBAAlB,SAAoCD,KCkB7BE,EApBM,SAAC,GAAiF,IAA/EC,EAA8E,EAA9EA,MAAOC,EAAuE,EAAvEA,YAAaC,EAA0D,EAA1DA,UAAWC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAIvF,OACI,sBAAcV,UAAWQ,EAAW,gBAAkB,SAAUG,QAAS,WAHzEJ,EAAQD,IAGR,UACI,sBAAMN,UAAU,gBAAhB,SAAiCY,OAAOC,YAAc,KAAwB,IAAjBJ,EAAMK,OAAeX,EAAaD,IAC/F,sBAAKF,UAAU,mBAAf,UACI,sBAAMA,UAAU,8BAAhB,SAAgE,IAAjBS,EAAMK,OAAwB,aAART,EAAsBI,EAAMK,OAAO,EAAb,UAAoBL,EAAM,GAA1B,YAAgCC,EAAhC,cAA0CD,EAAM,GAAhD,aAAuDC,GAAvD,UAAmED,EAAM,GAAzE,YAA+EC,GAAUD,EAAM,GAAKL,IAC7K,IAAjBK,EAAMK,OAAwB,aAATT,EAClB,uBAAMU,MAAM,0BAAZ,cAAwCN,EAAMK,UAE9C,sBAAMd,UAAoB,aAATK,EAAsB,uCAA0CG,EAAW,iCAAmC,0CAPjIF,ICSHU,EAdA,SAAC,GAA6C,IAA3CjB,EAA0C,EAA1CA,KAAMO,EAAoC,EAApCA,GAAIG,EAAgC,EAAhCA,MAAOQ,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACzC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACI,qBAAcf,GAAIA,EAAIN,UAAWoB,EAAS,uBAAyB,SAAUT,QAAS,kBALtFU,GAAWD,QACXF,EAASnB,EAAMU,EAAOQ,IAItB,SACI,mBAAGjB,UAAU,eAAb,SAA6BD,KADvBO,ICAHgB,EARH,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,KAAMO,EAAS,EAATA,GACjB,OACI,qBAAKN,UAAmB,IAAPM,EAAW,mBAAqB,MAAjD,SACI,mBAAGN,UAAU,YAAb,SAA0BD,OCavBwB,EAhBI,SAAC,GAA4D,IAA1DxB,EAAyD,EAAzDA,KAAMO,EAAmD,EAAnDA,GAAIG,EAA+C,EAA/CA,MAAOQ,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,SAAUM,EAAoB,EAApBA,QAASd,EAAW,EAAXA,KAChE,EAA4BS,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,6BAOA,OACI,qBAAcb,GAAIA,EAAIN,UAAWoB,EAAS,wCAA2C,0BAA4BT,QAAS,kBAN1HU,GAAWD,GACXF,EAASnB,EAAMU,EAAOQ,QACtBO,EAAQd,IAIR,SACKX,GADKO,ICTZmB,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAgB9EC,EAfE,SAAC,GAAsD,IAApD3B,EAAmD,EAAnDA,KAAMO,EAA6C,EAA7CA,GAAIY,EAAyC,EAAzCA,SAAUT,EAA+B,EAA/BA,MAAOQ,EAAwB,EAAxBA,SAAUO,EAAc,EAAdA,QACrD,OACI,sBAAKlB,GAAIA,EAAIN,UAAU,WAAvB,UACI,qBAAKA,UAAU,iBAAf,SACI,mBAAGA,UAAU,uBAAb,SAAqCD,MAEzC,qBAAKC,UAAU,mBAAf,SACKyB,EAAOE,KAAI,SAACC,EAAGC,GAAJ,OACR,cAAC,EAAD,CAAYvB,GAAIuB,EAAG9B,KAAM6B,EAAGnB,MAAOA,EAAOQ,SAAUA,EAAUC,SAAUA,EAAUR,KAAMX,EAAMyB,QAASA,aCLrHM,EAAY,CAAC,SAAU,eAAgB,OAAQ,wBAAyB,UAAW,UACrF,uBAAwB,YAAa,OAAQ,SAAU,SAAU,eAAgB,gBACjF,gBAAiB,gBAAiB,gBAEhCC,EAAQ,CAAC,sBAAuB,wBAAyB,2BAA4B,2BAA4B,mBACnH,0BAA2B,0BAA2B,iBAAkB,wBAAyB,gCACjG,8BAA+B,wBAAyB,wBAAyB,qBAAsB,iBAAkB,iBAAkB,+BAEzIC,EAAO,CAAC,+BAAgC,SAAU,uBAElDC,EAAQ,CAAC,OAAQ,OAAQ,QA6GhBC,EA3GY,WACvB,MAA4Cf,mBAAS,IAArD,mBAAOgB,EAAP,KAAuBC,EAAvB,KACA,EAAsCjB,oBAAS,GAA/C,mBAAOkB,EAAP,KAAoBC,EAApB,KACA,EAAwCnB,mBAAS,IAAjD,mBAAOoB,EAAP,KAAqBC,EAArB,KACA,EAAkCrB,mBAAS,IAA3C,mBAAOsB,EAAP,KAAkBC,EAAlB,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACA,EAA8BzB,mBAAS,IAAvC,mBAAO0B,EAAP,KAAgBC,EAAhB,KACA,EAAwB3B,mBAAS,IAAjC,mBAAOT,EAAP,KAAac,EAAb,KAEAuB,qBAAU,WACND,EAAW,MACZ,CAACL,EAAWF,EAAcI,IAE7B,IAAMK,EAAc,SAAC1C,GAIbgC,EAHAH,IAAmB7B,IAAO+B,GAK9BD,EAAkB9B,IAchB2C,EAAU,SAAClD,EAAMU,EAAOQ,GAC1B,GAAIL,OAAOC,WAAa,IAAK,CACzB,IAAIgC,EAAO,sBAAOpC,GAAP,CAAcV,IACzBkB,EAAS,YAAI4B,QACV,CACH,IAAIK,EAAU,sBAAOL,GAAP,CAAgB9C,IAC9B+C,EAAW,YAAII,MAIvB,OACI,sBAAKlD,UAAU,6BAAf,UACI,qBAAKA,UAAU,8BAAf,2BAGA,sBAAKA,UAAU,gCAAf,UACI,cAAC,EAAD,CAAcE,MAAO,aAAcC,YAAa,KAAMC,UAAW,kBAAmBG,QAASyC,EAAaxC,SAA6B,IAAnB2B,GAAwBE,EAAa/B,GAAI,EAAGG,MAAO8B,IACvK,cAAC,EAAD,CAAcrC,MAAO,iBAAkBC,YAAa,OAAQC,UAAW,WAAYG,QAASyC,EAAaxC,SAA6B,IAAnB2B,GAAwBE,EAAa/B,GAAI,EAAGG,MAAOgC,IACtK,cAAC,EAAD,CAAcvC,MAAO,YAAaC,YAAa,YAAaC,UAAW,WAAYC,KAAM,WAAYE,QAASyC,EAAaxC,SAA6B,IAAnB2B,GAAwBE,EAAa/B,GAAI,EAAGG,MAAOkC,EAAOjC,KAAMA,IACrM,qBAAKV,UAAU,4BAAf,SACI,cAAC,EAAD,CAAQD,KAAMa,OAAOC,YAAc,IAAM,gBAAkB,wBAGlEwB,GACG,sBAAKrC,UAAU,iCAAf,UACI,sBAAKA,UAAU,yCAAf,UACI,sBAAMW,QAAS,kBAAM2B,GAAe,IAAQhC,GAAG,GAAGN,UAAU,mEAE5D,sBAAKA,UAAU,gDAAf,UACwB,IAAnBmC,GAAwB,sDACL,IAAnBA,GAAwB,yDACL,IAAnBA,GAAwB,0DAE7B,wBACInC,UAAU,sDACVW,QAAS,WA9CZ,IAACL,EACP,KADOA,EA+CmB6B,GA7CjCK,EAAgB,YAAIK,IACN,IAAPvC,EACPoC,EAAa,YAAIG,IACH,IAAPvC,GACPsC,EAAS,YAAIC,IA0COP,GAAe,IAJvB,sBAWJ,sBAAKtC,UAAU,0CAAf,UACwB,IAAnBmC,GAAwB,qBAAKnC,UAAU,mDAAf,SACpB8B,EAAUH,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAQ9B,KAAM6B,EAAGtB,GAAIuB,EAAGpB,MAAO8B,EAActB,SAAUuB,EAAiBtB,SAAU+B,SAE3F,IAAnBd,GACG,qCACI,qBAAKnC,UAAU,gDAAf,SACKgC,EAAKL,KAAI,SAACC,EAAGC,GACV,OAAO,cAAC,EAAD,CAAK9B,KAAM6B,EAAGtB,GAAIuB,SAGjC,qBAAK7B,UAAU,mDAAf,SACK+B,EAAMJ,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAQ9B,KAAM6B,EAAGtB,GAAIuB,EAAGpB,MAAOgC,EAAWxB,SAAUyB,EAAcxB,SAAU+B,YAIzF,IAAnBd,GACG,qBAAKnC,UAAU,qDAAf,SACKiC,EAAMN,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAU9B,KAAM6B,EAAGtB,GAAIuB,EAAGpB,MAAOkC,EAAO1B,SAAU2B,EAAU1B,SAAU+B,EAASzB,QAASA,SAGrH,kCCzGT2B,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.54e0c98b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = ({text}) => {\r\n    return (\r\n        <button className=\"button-primary\">{text}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nconst OptionFilter = ({ label, labelSecond, selection, type, id, openTab, isActive, group, year }) => {\r\n    const showContent = () => {\r\n        openTab(id)\r\n    }\r\n    return (\r\n        <div key={id} className={isActive ? \"filter active\" : \"filter\"} onClick={() => showContent()}>\r\n            <span className=\"filter__label\">{window.innerWidth <= 760 && group.length !== 0 ? labelSecond: label }</span>\r\n            <div className=\"filter__selector\">\r\n                <span className=\"filter__selector__selection\">{group.length !== 0 ? (type=== \"calendar\" ? (group.length>1 ?(`${group[0]} ${year} - ${group[1]}  ${year}`): `${group[0]} ${year}` ): group[0]) :selection}</span>\r\n                {group.length !== 0 & type !== 'calendar' ?\r\n                    <span class=\"filter__selector__badge\">+{group.length}</span>\r\n                    :\r\n                    <span className={type === 'calendar' ? \"filter__selector__icon icon-calendar\" : (isActive ? \"filter__selector__icon icon-up\" : \"filter__selector__icon icon-down\")}>\r\n                    </span>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OptionFilter;","import React, { useState } from 'react';\r\n\r\nconst Select = ({ text, id, group, setGroup, sendData }) => {\r\n    const [active, setActive] = useState(false);\r\n    const addOptions = () => {\r\n        setActive(!active);\r\n        sendData(text, group, setGroup);\r\n    }\r\n\r\n    return (\r\n        <div key={id} id={id} className={active ? \"select-active select\" : \"select\"} onClick={() => addOptions()}>\r\n            <p className=\"select__text\">{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Select;","import React from 'react';\r\n\r\nconst Tab = ({ text, id }) => {\r\n    return (\r\n        <div className={ id === 0 ? ' tab tab--active' : 'tab'}>\r\n            <p className=\"tab__text\">{text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab;","import React, { useState } from 'react';\r\n\r\nconst SelectDate = ({ text, id, group, setGroup, sendData, setYear, year }) => {\r\n    const [active, setActive] = useState(false);\r\n    const [selected, setSelected] = useState(false);\r\n    const addOptions = () => {\r\n        setActive(!active);\r\n        sendData(text, group, setGroup);\r\n        setYear(year);\r\n    }\r\n\r\n    return (\r\n        <div key={id} id={id} className={active ? \"calendar__months__month month--active\" :  \"calendar__months__month\" } onClick={() => addOptions()}>\r\n            {text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectDate;","import React, { useState } from 'react';\r\nimport SelectDate from './SelectDate';\r\n\r\nconst months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Set', 'Oct', 'Nov', 'Dec']\r\nconst Calendar = ({ text, id, sendData, group, setGroup, setYear }) => {\r\n    return (\r\n        <div id={id} className=\"calendar\" >\r\n            <div className=\"calendar__year\">\r\n                <p className=\"calendar__year__text\">{text}</p>\r\n            </div>\r\n            <div className=\"calendar__months\">\r\n                {months.map((e, i) =>\r\n                    <SelectDate id={i} text={e} group={group} setGroup={setGroup} sendData={sendData} year={text} setYear={setYear} />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar;","import React, { useState, useEffect } from 'react';\r\nimport Button from './components/Button';\r\nimport OptionFilter from './components/OptionFilter';\r\nimport Select from './components/Select';\r\nimport Tab from './components/Tab';\r\nimport Calendar from './components/Calendar';\r\n\r\nconst countries = ['Alaska', 'Arabian Gulf', 'Asia', 'Australia&New Zealand', 'Bahamas', 'Bermuda',\r\n    'Canada & New England', 'Caribbean', 'Cuba', 'Europe', 'Hawaii', 'Panama Canal', 'Repositioning',\r\n    'South Pacific', 'Transatlantic', 'Transpacific'];\r\n\r\nconst ports = ['Baltimore, Maryland', 'Boston, Massachusetts', 'Cape Liberty, New Jersey', 'Fort Lauderdale, Florida', 'Galveston, Texas',\r\n    'Honolulu (Oahu), Hawaii', 'Los Angeles, California', 'Miami, Florida', 'New Orleans, Louisana', 'Orlando ( Port Canaveral), FL',\r\n    'Quebec City, Quebec, Canada', 'San Diego, California', 'San Juan, Puerto Rico', 'Seattle, Washinton', 'Seward, Alaska', 'Tampa, Florida', 'Vancouver, British Colombia'];\r\n\r\nconst tabs = ['The Americas & the caribbean', 'Europe', 'Asia & Southpacific'];\r\n\r\nconst years = ['2018', '2019', '2020'];\r\n\r\nconst CruiseSearchWidget = () => {\r\n    const [optionSelected, setOptionSelected] = useState('');\r\n    const [openOptions, setOpenOptions] = useState(false);\r\n    const [destinations, setDestinations] = useState([]);\r\n    const [shipments, setShipments] = useState([]);\r\n    const [dates, setDates] = useState([]);\r\n    const [arrTemp, setArrTemp] = useState([]);\r\n    const [year, setYear] = useState('');\r\n\r\n    useEffect(() => {\r\n        setArrTemp([]);\r\n    }, [shipments, destinations, dates]);\r\n\r\n    const showOptions = (id) => {\r\n        if (optionSelected !== id || !openOptions) {\r\n            setOpenOptions(true);\r\n        } else {\r\n            setOpenOptions(false);\r\n        }\r\n        setOptionSelected(id);\r\n    }\r\n\r\n    const applyChanges = (id) => {\r\n        if (id === 1) {\r\n            setDestinations([...arrTemp]);\r\n        } else if (id === 2) {\r\n            setShipments([...arrTemp])\r\n        } else if (id === 3) {\r\n            setDates([...arrTemp])\r\n        }\r\n\r\n    }\r\n\r\n    const getData = (text, group, setGroup) => {\r\n        if (window.innerWidth > 760) {\r\n            let arrTemp = [...group, text];\r\n            setGroup([...arrTemp]);\r\n        } else {\r\n            let newArrTemp = [...arrTemp, text];\r\n            setArrTemp([...newArrTemp]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cruise-search-widget__base\">\r\n            <div className=\"cruise-search-widget__title\">\r\n                Find a Cruise\r\n            </div>\r\n            <div className=\"cruise-search-widget__toolbar\">\r\n                <OptionFilter label={'Cruises to'} labelSecond={'To'} selection={'Any Destination'} openTab={showOptions} isActive={optionSelected === 1 && openOptions} id={1} group={destinations} />\r\n                <OptionFilter label={'Departing from'} labelSecond={'From'} selection={'Any Port'} openTab={showOptions} isActive={optionSelected === 2 && openOptions} id={2} group={shipments} />\r\n                <OptionFilter label={'Departing'} labelSecond={'Departing'} selection={'Any Date'} type={'calendar'} openTab={showOptions} isActive={optionSelected === 3 && openOptions} id={3} group={dates} year={year} />\r\n                <div className=\"cruise-search-widget__cta\">\r\n                    <Button text={window.innerWidth <= 760 ? 'FIND A CRUISE' : 'SEARCH CRUISES'} />\r\n                </div>\r\n            </div>\r\n            {openOptions &&\r\n                <div className=\"cruise-search-widget__dropdown\">\r\n                    <div className=\"cruise-search-widget__dropdown__header\">\r\n                        <span onClick={() => setOpenOptions(false)} id=\"\" className=\"cruise-search-widget__dropdown__header--buttonreturn icon-left\">\r\n                        </span>\r\n                        <div className=\"cruise-search-widget__dropdown__header--label\">\r\n                            {optionSelected === 1 && <span>Select Destination</span>}\r\n                            {optionSelected === 2 && <span>Select Departure Port</span>}\r\n                            {optionSelected === 3 && <span>Select Travel Dates</span>}\r\n                        </div>\r\n                        <button\r\n                            className=\"cruise-search-widget__dropdown__header--buttonapply\"\r\n                            onClick={() => {\r\n                                applyChanges(optionSelected);\r\n                                setOpenOptions(false)\r\n                            }}\r\n                        >\r\n                            APPLY\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"cruise-search-widget__dropdown__content\">\r\n                        {optionSelected === 1 && <div className=\"cruise-search-widget__dropdown__content__options\">\r\n                            {countries.map((e, i) => <Select text={e} id={i} group={destinations} setGroup={setDestinations} sendData={getData} />)}\r\n                        </div>}\r\n                        {optionSelected === 2 &&\r\n                            <>\r\n                                <div className=\"cruise-search-widget__dropdown__content__tabs\">\r\n                                    {tabs.map((e, i) => {\r\n                                        return <Tab text={e} id={i} />\r\n                                    })}\r\n                                </div>\r\n                                <div className=\"cruise-search-widget__dropdown__content__options\">\r\n                                    {ports.map((e, i) => <Select text={e} id={i} group={shipments} setGroup={setShipments} sendData={getData} />)}\r\n                                </div>\r\n                            </>\r\n                        }\r\n                        {optionSelected === 3 &&\r\n                            <div className=\"cruise-search-widget__dropdown__content__calendars\">\r\n                                {years.map((e, i) => <Calendar text={e} id={i} group={dates} setGroup={setDates} sendData={getData} setYear={setYear} />)}\r\n                            </div>\r\n                        }\r\n                        <div />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CruiseSearchWidget;","import './styles/global.scss';\r\nimport './CruiseSearchWidget';\r\nimport CruiseSearchWidget from './CruiseSearchWidget';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <CruiseSearchWidget />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.scss';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}